@function color($color-name, $color-variant) {
    // map inception
    @return map-get(map-get($colors, $color-name), $color-variant);
}

// retrieve background from $colors map ie. `color(primary, base)`
// @function color($backImages, $color-variant) {
//     @return (map-get($colors, $color-variant);
// }
$colors:#e60926,
#2bacf7,
#f72b46,
#2bf776,
#2b46f7;
@mixin bckg() {
    @for $i from 1 through length($colors) {
        &:nth-child(#{length($colors)}n + #{$i}) {
            background: transparentize(nth($colors, $i), 0.5);
        }
    }
}

@mixin backColor ($colorBkg) {
    article {
        background-color: transparentize( mix($colorBkg, orangered), 0.25);
    }
    header {
        background-color: transparentize( mix($colorBkg, limegreen), 0.25);
    }
    section {
        background-color: transparentize(complement(lighten($colorBkg, 20%)), 0.25);
    }
    footer {
        background-color: transparentize(complement($colorBkg), 0.25);
    }
    >div {
        background-color: transparentize(saturate($color: $colorBkg, $amount: 25%), 0.25)
    }
    aside {
        background-color: darken(transparentize($colorBkg, 0.2), 20%);
    }
}
@mixin back($image, $choix) {
    background: url(map-get($backImages), $image)
    /* image */
    top left / cover
    /* position / size */
    no-repeat
    /* repeat */
    fixed
    /* attachment */
    padding-box
    /* origin */
    border-box
    /* clip */
    color(primary, base);
    ;
    /* color */
}